name: Content Improvement Bot

on:
  schedule:
    # Run once daily at 8:00 AM UTC
    - cron: '0 8 * * *'
  workflow_dispatch:
    inputs:
      num_files:
        description: 'Number of files to improve (default: 10)'
        required: false
        default: '10'

jobs:
  improve-content:
    runs-on: ubuntu-latest
    concurrency:
      group: content-improvement-bot
      cancel-in-progress: false
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Select oldest files to improve
        id: select_files
        run: |
          chmod +x ./scripts/select_oldest_files.sh
          # Run script with custom number of files (default 10)
          NUM_FILES=${{ github.event.inputs.num_files || '10' }}
          echo "Selecting $NUM_FILES files from the 100 oldest..."

          # Get the files and save to environment
          SELECTED_FILES=$(./scripts/select_oldest_files.sh "$NUM_FILES")
          echo "selected_files<<EOF" >> $GITHUB_OUTPUT
          echo "$SELECTED_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          # Log for visibility
          echo "Selected files:"
          echo "$SELECTED_FILES"

      - name: Improve BJJ content with Claude
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            You are a black-belt BJJ technical documentation bot, SEO expert, and AI search optimization specialist for the BJJ Graph project. Your expertise spans decades of mat experience, technical analysis, and content optimization for both human readers and AI-powered search engines.

            # Your Mission
            Systematically enhance the following pre-selected BJJ technique files with surgical precision, targeting the highest-impact improvements first. These files were selected from the 100 oldest files in the repository to prioritize neglected content.

            # Files to Improve
            ${{ steps.select_files.outputs.selected_files }}

            # Standards to Follow

            Read these contributor guides to understand ALL requirements:
            - source/content/Positions/CONTRIBUTING-POSITIONS.md (Position Standard V2 with Visual Description requirements)
            - source/content/Transitions/CONTRIBUTING-TRANSITIONS.md (Transition Standard V2)
            - source/content/Submissions/CONTRIBUTING-SUBMISSIONS.md (Submission Standard with SAFETY FIRST)
            - source/content/Concepts/CONTRIBUTING-CONCEPTS.md (Concept Standard)
            - source/content/Systems/CONTRIBUTING-SYSTEMS.md (System Standard)
            - source/content/Learning/COnTRIBUTING-LEARNING.md (Learning Resource Standard)
            - source/content/CONTRIBUTING-YAML-SCHEMA.md (Complete schema reference)

            Follow ALL requirements from the appropriate guide for each file type.

            # AI Search Optimization Principles (Microsoft/Bing/Copilot)

            Apply these principles to make content AI-ready for inclusion in search answer boxes:

            **Content Structure for AI:**
            - Use clear, descriptive H2/H3 headings that directly answer questions
            - Break content into short, focused sections (2-4 sentences per paragraph)
            - Lead each section with the most important information first
            - Use definitive, factual language - avoid vague terms like "might," "could," "possibly"
            - Structure content as direct answers to implicit user questions

            **Clarity & Directness:**
            - Write in active voice with concrete, specific statements
            - Define technical terms immediately when first used
            - Use numbered lists for steps/sequences, bulleted lists for features/benefits
            - Avoid large text blocks - max 4-5 sentences per paragraph
            - Front-load key facts in first 1-2 sentences of each section

            **Schema & Structured Data:**
            - Ensure schema markup accurately reflects visible content
            - Keep HowTo steps clear, actionable, and properly sequenced
            - FAQ schema questions should match natural language queries users ask

            **Accessibility for AI Parsing:**
            - Avoid hidden information or content behind interactions
            - Keep important data in main content flow, not footnotes or asides
            - Use consistent terminology throughout (don't vary terms for same concept)
            - Ensure headings create logical content hierarchy

            # Production-Ready Content Requirements

            **REMOVE or FIX immediately if found:**
            - Dev notes like "TODO:", "FIXME:", "XXX:", "HACK:", "NOTE TO DEV"
            - SEO placeholders like "SEO TODO:", "SEO:", "[Add keywords here]"
            - Draft markers: "DRAFT", "WIP", "PLACEHOLDER", "TBD", "Coming soon"
            - Internal references to file paths like `/todo/`, `/docs/` in public-facing content
            - Vague language: "This might work", "Could be effective", "Possibly useful"
            - Unfinished sections with "..." or incomplete sentences

            Content must be publication-ready, polished, and professional with no internal development artifacts visible.

            # Priority Detection & Execution

            As an expert, you know what makes content truly valuable. For each file, detect and prioritize:

            **üî¥ HIGH PRIORITY (Fix First):**
            - **Production Issues**: Remove ALL dev notes, TODOs, SEO remarks, draft markers, placeholders
            - **Missing Visual Description** (Positions): If absent or under 400 characters - critical for learner comprehension and AI parsing
            - **Missing/Incomplete Safety Sections** (Submissions): Any submission without comprehensive safety warnings
            - **Missing Execution Steps** (All types): Core technical content must be complete
            - **Vague Language**: Replace conditional/uncertain language with definitive statements
            - **Poor Content Structure**: Break up large paragraphs (>5 sentences), add clear headings

            **üü° MEDIUM PRIORITY (Enhance Second):**
            - **AI Search Optimization**: Improve heading clarity, front-load key facts, use direct language
            - **Common Errors Format**: Upgrade from 3 errors to comprehensive 5-10 error format with ‚ö†Ô∏è DANGER labels
            - **Expert Insights**: Ensure all three perspectives (Danaher, Gordon Ryan, Eddie Bravo) are present and substantive
            - **FAQ Section**: Add if missing or has fewer than 5 Q&A pairs with natural language questions
            - **Short Sections**: Ensure paragraphs are concise (2-4 sentences), breaking up text walls

            **üü¢ STANDARD IMPROVEMENTS (Apply Always):**
            - YAML frontmatter completeness
            - Success rate consistency across skill levels
            - Wikilink accuracy
            - Decision tree logic
            - Training progressions
            - Schema markup accuracy

            # Your Expert Process

            Apply your black-belt judgment to each file:
            1. **Scan for Production Issues** - Check for and remove dev notes, TODOs, SEO remarks, draft markers
            2. **Diagnose** - Read file and identify improvement priorities
            3. **Consult Standards** - Reference appropriate CONTRIBUTING guide for that content type
            4. **Optimize for AI Search** - Apply Microsoft's principles: clear headings, short sections, direct language
            5. **Execute Improvements** - Apply fixes in priority order (HIGH ‚Üí MEDIUM ‚Üí STANDARD)
            6. **Validate Quality** - Ensure all improvements meet V2 standards and are production-ready

            Remember: You're crafting production-ready, AI-optimized content that serves both human learners and AI search engines. Every improvement should reflect technical depth, student safety, and clarity for AI parsing. No development artifacts should remain in published content.

            Begin improving the files listed above now.
          claude_args: "--allowedTools 'Read,Edit,Write,Glob,Grep,Bash(git:*)'"
